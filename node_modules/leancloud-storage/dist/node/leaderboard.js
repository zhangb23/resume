'use strict';

var _ = require('underscore');

var _require = require('./request'),
    request = _require.request;

var LeaderboardVersionChangeInterval = {
  NEVER: 'never',
  HOUR: 'hour',
  DAY: 'day',
  WEEK: 'week',
  MONTH: 'month'
};

var LeaderboardOrder = {
  ASCENDING: 'ascending',
  DESCENDING: 'descending'
};

function LeaderBoard(statisticName) {
  this.statisticName = statisticName;
}

LeaderBoard.createWithoutData = function (statisticName) {
  return new LeaderBoard(statisticName);
};
LeaderBoard.createLeaderBoard = function (_ref) {
  var statisticName = _ref.statisticName,
      order = _ref.order,
      versionChangeInterval = _ref.versionChangeInterval;
  return request({
    method: 'PUT',
    path: '/play/leaderboards',
    data: {
      statisticName: statisticName,
      boardType: 'normal',
      order: order,
      versionChangeInterval: versionChangeInterval
    }
  }).then(function (_ref2) {
    var versionChangeInterval = _ref2.versionChangeInterval,
        version = _ref2.version;

    var leaderBoard = new LeaderBoard(statisticName);
    leaderBoard;
  });
};

_.extend(LeaderBoard.prototype, {
  fetch: function fetch(authOptions) {},
  getResults: function getResults(_ref3, authOptions) {
    var skip = _ref3.skip,
        limit = _ref3.limit,
        includeUserData = _ref3.includeUserData;
  },
  getResultsAroundUser: function getResultsAroundUser(user, _ref4, authOptions) {
    var skip = _ref4.skip,
        limit = _ref4.limit,
        includeUserData = _ref4.includeUserData;
  }
});